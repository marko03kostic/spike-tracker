from enum import Enum


class Endpoint(Enum):
    LIST_EVENT_TYPES = 'listEventTypes/'
    LIST_COMPETITIONS = 'listCompetitions/'
    LIST_TIME_RANGES = 'listTimeRanges/'
    LIST_EVENTS = 'listEvents/'
    LIST_MARKET_TYPES = 'listMarketTypes/'
    LIST_COUNTRIES = 'listCountries/'
    LIST_VENUES = 'listVenues/'
    LIST_MARKET_CATALOGUE = 'listMarketCatalogue/'
    LIST_MARKET_BOOK = 'listMarketBook/'
    LIST_RUNNER_BOOK = 'listRunnerBook/'
    LIST_MARKET_PROFIT_AND_LOSS = 'listMarketProfitAndLoss/'
    LIST_CURRENT_ORDERS = 'listCurrentOrders/'
    LIST_CLEARED_ORDERS = 'listClearedOrders/'
    PLACE_ORDERS = 'placeOrders/'
    CANCEL_ORDERS = 'cancelOrders/'
    REPLACE_ORDERS = 'replaceOrders/'
    UPDATE_ORDERS = 'updateOrders/'


class MarketProjection(Enum):
    COMPETITION = 'COMPETITION'
    EVENT = 'EVENT'
    EVENT_TYPE = 'EVENT_TYPE'
    MARKET_START_TIME = 'MARKET_START_TIME'
    MARKET_DESCRIPTION = 'MARKET_DESCRIPTION'
    RUNNER_DESCRIPTION = 'RUNNER_DESCRIPTION'
    RUNNER_METADATA = 'RUNNER_METADATA'


class PriceData(Enum):
    SP_AVAILABLE = 'SP_AVAILABLE'
    SP_TRADED = 'SP_TRADED'
    EX_BEST_OFFERS = 'EX_BEST_OFFERS'
    EX_ALL_OFFERS = 'EX_ALL_OFFERS'
    EX_TRADED = 'EX_TRADED'


class MatchProjection(Enum):
    NO_ROLLUP = 'NO_ROLLUP'
    ROLLED_UP_BY_PRICE = 'ROLLED_UP_BY_PRICE'
    ROLLED_UP_BY_AVG_PRICE = 'ROLLED_UP_BY_AVG_PRICE'


class OrderProjection(Enum):
    ALL = 'ALL'
    EXECUTABLE = 'EXECUTABLE'
    EXECUTION_COMPLETE = 'EXECUTION_COMPLETE'


class MarketStatus(Enum):
    INACTIVE = 'INACTIVE'
    OPEN = 'OPEN'
    SUSPENDED = 'SUSPENDED'
    CLOSED = 'CLOSED'


class RunnerStatus(Enum):
    ACTIVE = 'ACTIVE'
    WINNER = 'WINNER'
    LOSER = 'LOSER'
    PLACED = 'PLACED'
    REMOVED_VACANT = 'REMOVED_VACANT'
    REMOVED = 'REMOVED'
    HIDDEN = 'HIDDEN'


class TimeGranularity(Enum):
    DAYS = 'DAYS'
    HOURS = 'HOURS'
    MINUTES = 'MINUTES'


class Side(Enum):
    BACK = 'BACK'
    LAY = 'LAY'


class OrderStatus(Enum):
    PENDING = 'PENDING'
    EXECUTION_COMPLETE = 'EXECUTION_COMPLETE'
    EXECUTABLE = 'EXECUTABLE'
    EXPIRED = 'EXPIRED'


class OrderBy(Enum):
    BY_BET = 'BY_BET'
    BY_MARKET = 'BY_MARKET'
    BY_MATCH_TIME = 'BY_MATCH_TIME'
    BY_PLACE_TIME = 'BY_PLACE_TIME'
    BY_SETTLED_TIME = 'BY_SETTLED_TIME'
    BY_VOID_TIME = 'BY_VOID_TIME'


class SortDir(Enum):
    EARLIEST_TO_LATEST = 'EARLIEST_TO_LATEST'
    LATEST_TO_EARLIEST = 'LATEST_TO_EARLIEST'


class OrderType(Enum):
    LIMIT = 'LIMIT'
    LIMIT_ON_CLOSE = 'LIMIT_ON_CLOSE'
    MARKET_ON_CLOSE = 'MARKET_ON_CLOSE'


class MarketSort(Enum):
    MINIMUM_TRADED = 'MINIMUM_TRADED'
    MAXIMUM_TRADED = 'MAXIMUM_TRADED'
    MINIMUM_AVAILABLE = 'MINIMUM_AVAILABLE'
    MAXIMUM_AVAILABLE = 'MAXIMUM_AVAILABLE'
    FIRST_TO_START = 'FIRST_TO_START'
    LAST_TO_START = 'LAST_TO_START'


class MarketBettingType(Enum):
    ASIAN_HANDICAP_DOUBLE_LINE = 'ASIAN_HANDICAP_DOUBLE_LINE'
    ASIAN_HANDICAP_SINGLE_LINE = 'ASIAN_HANDICAP_SINGLE_LINE'
    LINE = 'LINE'
    ODDS = 'ODDS'
    RANGE = 'RANGE'
    FIXED_ODDS = 'FIXED_ODDS'


class ExecutionReportStatus(Enum):
    SUCCESS = 'SUCCESS'
    FAILURE = 'FAILURE'
    PROCESSED_WITH_ERRORS = 'PROCESSED_WITH_ERRORS'
    TIMEOUT = 'TIMEOUT'


class ExecutionReportErrorCode(Enum):
    ERROR_IN_MATCHER = 'ERROR_IN_MATCHER'
    PROCESSED_WITH_ERRORS = 'PROCESSED_WITH_ERRORS'
    BET_ACTION_ERROR = 'BET_ACTION_ERROR'
    INVALID_ACCOUNT_STATE = 'INVALID_ACCOUNT_STATE'
    INVALID_WALLET_STATUS = 'INVALID_WALLET_STATUS'
    INSUFFICIENT_FUNDS = 'INSUFFICIENT_FUNDS'
    LOSS_LIMIT_EXCEEDED = 'LOSS_LIMIT_EXCEEDED'
    MARKET_SUSPENDED = 'MARKET_SUSPENDED'
    MARKET_NOT_OPEN_FOR_BETTING = 'MARKET_NOT_OPEN_FOR_BETTING'
    DUPLICATE_TRANSACTION = 'DUPLICATE_TRANSACTION'
    INVALID_ORDER = 'INVALID_ORDER'
    INVALID_MARKET_ID = 'INVALID_MARKET_ID'
    PERMISSION_DENIED = 'PERMISSION_DENIED'
    DUPLICATE_BETIDS = 'DUPLICATE_BETIDS'
    NO_ACTION_REQUIRED = 'NO_ACTION_REQUIRED'
    SERVICE_UNAVAILABLE = 'SERVICE_UNAVAILABLE'
    REJECTED_BY_REGULATOR = 'REJECTED_BY_REGULATOR'
    INVALID_MARKET_VERSION = 'INVALID_MARKET_VERSION'
    INVALID_PROFIT_RATIO = 'INVALID_PROFIT_RATIO'


class PersistenceType(Enum):
    LAPSE = 'LAPSE'
    PERSIST = 'PERSIST'
    MARKET_ON_CLOSE = 'MARKET_ON_CLOSE'


class InstructionReportStatus(Enum):
    SUCCESS = 'SUCCESS'
    FAILURE = 'FAILURE'
    TIMEOUT = 'TIMEOUT'


class InstructionReportErrorCode(Enum):
    INVALID_BET_SIZE = 'INVALID_BET_SIZE'
    INVALID_RUNNER = 'INVALID_RUNNER'
    BET_TAKEN_OR_LAPSED = 'BET_TAKEN_OR_LAPSED'
    BET_IN_PROGRESS = 'BET_IN_PROGRESS'
    RUNNER_REMOVED = 'RUNNER_REMOVED'
    MARKET_NOT_OPEN_FOR_BETTING = 'MARKET_NOT_OPEN_FOR_BETTING'
    LOSS_LIMIT_EXCEEDED = 'LOSS_LIMIT_EXCEEDED'
    MARKET_NOT_OPEN_FOR_BSP_BETTING = 'MARKET_NOT_OPEN_FOR_BSP_BETTING'
    INVALID_PRICE_EDIT = 'INVALID_PRICE_EDIT'
    INVALID_ODDS = 'INVALID_ODDS'
    INSUFFICIENT_FUNDS = 'INSUFFICIENT_FUNDS'
    INVALID_PERSISTENCE_TYPE = 'INVALID_PERSISTENCE_TYPE'
    ERROR_IN_MATCHER = 'ERROR_IN_MATCHER'
    INVALID_BACK_LAY_COMBINATION = 'INVALID_BACK_LAY_COMBINATION'
    ERROR_IN_ORDER = 'ERROR_IN_ORDER'
    INVALID_BID_TYPE = 'INVALID_BID_TYPE'
    INVALID_BET_ID = 'INVALID_BET_ID'
    CANCELLED_NOT_PLACED = 'CANCELLED_NOT_PLACED'
    RELATED_ACTION_FAILED = 'RELATED_ACTION_FAILED'
    NO_ACTION_REQUIRED = 'NO_ACTION_REQUIRED'
    TIME_IN_FORCE_CONFLICT = 'TIME_IN_FORCE_CONFLICT'
    UNEXPECTED_PERSISTENCE_TYPE = 'UNEXPECTED_PERSISTENCE_TYPE'
    INVALID_ORDER_TYPE = 'INVALID_ORDER_TYPE'
    UNEXPECTED_MIN_FILL_SIZE = 'UNEXPECTED_MIN_FILL_SIZE'
    INVALID_CUSTOMER_ORDER_REF = 'INVALID_CUSTOMER_ORDER_REF'
    INVALID_MIN_FILL_SIZE = 'INVALID_MIN_FILL_SIZE'
    BET_LAPSED_PRICE_IMPROVEMENT_TOO_LARGE = 'BET_LAPSED_PRICE_IMPROVEMENT_TOO_LARGE'


class RollupModel(Enum):
    STAKE = 'STAKE'
    PAYOUT = 'PAYOUT'
    MANAGED_LIABILITY = 'MANAGED_LIABILITY'
    NONE = 'NONE'


class GroupBy(Enum):
    EVENT_TYPE = 'EVENT_TYPE'
    EVENT = 'EVENT'
    MARKET = 'MARKET'
    SIDE = 'SIDE'
    BET = 'BET'


class BetStatus(Enum):
    SETTLED = 'SETTLED'
    VOIDED = 'VOIDED'
    LAPSED = 'LAPSED'
    CANCELLED = 'CANCELLED'


class TimeInForce(Enum):
    FILL_OR_KILL = 'FILL_OR_KILL'


class BetTargetType(Enum):
    BACKERS_PROFIT = 'BACKERS_PROFIT'
    PAYOUT = 'PAYOUT'


class PriceLadderType(Enum):
    CLASSIC = 'CLASSIC'
    FINEST = 'FINEST'
    LINE_RANGE = 'LINE_RANGE'


class ErrorCode(Enum):
    TOO_MUCH_DATA = 'TOO_MUCH_DATA'
    INVALID_INPUT_DATA = 'INVALID_INPUT_DATA'
    INVALID_SESSION_INFORMATION = 'INVALID_SESSION_INFORMATION'
    NO_APP_KEY = 'NO_APP_KEY'
    NO_SESSION = 'NO_SESSION'
    UNEXPECTED_ERROR = 'UNEXPECTED_ERROR'
    INVALID_APP_KEY = 'INVALID_APP_KEY'
    TOO_MANY_REQUESTS = 'TOO_MANY_REQUESTS'
    SERVICE_BUSY = 'SERVICE_BUSY'
    TIMEOUT_ERROR = 'TIMEOUT_ERROR'
    REQUEST_SIZE_EXCEEDS_LIMIT = 'REQUEST_SIZE_EXCEEDS_LIMIT'
    ACCESS_DENIED = 'ACCESS_DENIED'
    INVALID_JSON = -32700
    METHOD_NOT_FOUND = -32601
    INVALID_PARAMS = -32602
    INTERNAL_ERROR = -32603